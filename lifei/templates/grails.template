== groovy.Grails.过滤器 == insert ==
        def user = getLoginedUser();
        if(!user) {
            flash.message = "您没有登陆，请先登陆系统";
            redirect controller:'login';
            return;
        } 

        def results = [];
        def totalCount = 0;
        params.max = Math.min(params.max ? params.int('max') : 10, 100);

        def queryField = [];
        def queryValue = [];

        def isTeacher = user.doesInRole('ROLE_TEACHER');

        // 处理assign
        switch(params.user) {
            case 'me':
                queryField << 'user=?';
                queryValue << user;
                break;
            case 'other':
                if(isTeacher) {
                    queryField << 'user!=?';
                    queryValue << user;
                }
                break;
            case 'customize':
                if(isTeacher && params."user.id") {
                    queryField << 'user=?';
                    queryValue << labmaster.auth.Member.read(params."user.id");
                }
        }

        switch(params.complete) {
            case 'yes':
                queryField << 'complete=?';
                queryValue << 100;
                break;
            case 'no':
                queryField << 'complete<?';
                queryValue << 100;
                break;
            case 'almost':
                queryField += ['complete<?','complete>?'];
                queryValue += [100,50];
        }

        def today = new Date();

        switch(params.date) {
            case 'today':
                queryField << 'date between ? and ?';
                queryValue += [today - 1, today];
                break;
            case 'yesterday':
                queryField << 'date between ? and ?';
                queryValue += [today - 2, today - 1];
                break;
            case 'thisWeek':
                def c= new GregorianCalendar();
                def days = c.get(Calendar.DAY_OF_WEEK);
                if(days == 1)
                    days = 7;
                else
                    days--;
                queryField << 'date between ? and ?';
                queryValue += [today - days, today];
                break;
            case 'lastWeek':
                def c= new GregorianCalendar();
                def days = c.get(Calendar.DAY_OF_WEEK);
                if(days == 1)
                    days = 7;
                else
                    days--;
                queryField << 'date between ? and ?';
                queryValue += [today - days - 7, today - 7];
                break
            case 'thisMonth':
                def c= new GregorianCalendar();
                def days = c.get(Calendar.DAY_OF_MONTH);
                queryField << 'date between ? and ?';
                queryValue += [today - days, today];
        }

        // 拼凑sql语句
        def hql = 'from |?Domain|';
        if(queryField.size() > 0)
            hql += ' where ' + queryField.join(' and ');

        if(params.sort && ['note','content', 'date'].contains(params.sort)) {
            hql += " order by ${params.sort}";

            if(params.order && ['desc', 'asc'].contains(params.order))
                hql += " ${params.order}";
        }

        // 处理排序
        results = |Domain|.findAll(hql, queryValue, params);
        totalCount = |Domain|.findAll(hql, queryValue).size();

        [|?domain|InstanceList: results, |domain|InstanceTotal: totalCount]

